<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TAIGridControl2</name>
    </assembly>
    <members>
        <member name="T:TAIGridControl2.TAIGridControl.GridEditModes">
            <summary>
            Denotes the form of action necessary to be taken to have a cell in editmode actually have its value
            change. Fireing the cell edited event. Either having the user press the enter/return key or having the
            user shift focus to another control or cell in the grid itself.
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.CellClicked">
            <summary>
            Raised whenever a cell is clicked. Coordinates designated by RowClicked/ColumnClicked
            </summary>
            <param name="sender"></param>
            <param name="RowClicked"></param>
            <param name="ColumnClicked"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.CellDoubleClicked">
            <summary>
            Raised whenever a cell is doubleclicked. Coordinates designated by RowClicked/ColumnClicked
            </summary>
            <param name="sender"></param>
            <param name="RowClicked"></param>
            <param name="ColumnClicked"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.CellEdited">
            <summary>
            Raised whenever a cell is edited by the user, if cell editing is turned on correctly.
            RowClicked/ColumnClicked designated which cell was edited. oldval/newval designated the previous contents and
            the new contents respectively
            </summary>
            <param name="sender"></param>
            <param name="RowClicked"></param>
            <param name="ColumnClicked"></param>
            <param name="oldval"></param>
            <param name="newval"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.RowSelected">
            <summary>
            Raised whenever a row is selected with the mouse or the keyboard. RowSelected designated which row.
            </summary>
            <param name="sender"></param>
            <param name="RowSelected"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.RowDeSelected">
            <summary>
            Raised whenever a row is deselected with the mouse or the kayboard. RowDeselected designated which row
            </summary>
            <param name="sender"></param>
            <param name="RowDeselected"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.PartialSelection">
            <summary>
            Raised whenever a populategrid from database call exceeded the set threshold of records
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.TooManyRecords">
            <summary>
            Raised whenever a populategrid from database call gets to many records that the grid cannot handle. After the rewrite
            in 2005 this event is exceedintgly difficult to fire as the grid can now handle millions of records at a time.
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.TooManyFields">
            <summary>
            Raised whenever a populategrid from database call gets to many records that the grid cannot handle. After the rewrite
            in 2005 this event is exceedintgly difficult to fire as the grid can now handle millions of records at a time.
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.StartedDatabasePopulateOperation">
            <summary>
            Raised when the grid starts a PopulateGridWData call from a supported data source (SQL,OLE,ODBC,DATATABLE etc.)
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.FinishedDatabasePopulateOperation">
            <summary>
            Raised when the grid finishes a PopulateGridWData call from a supported data source (SQL,OLE,ODBC,DATATABLE etc.)
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.ColumnResized">
            <summary>
            Raised when the user resizes a column using the mouse. ColumnIndex designated the column being resized
            </summary>
            <param name="sender"></param>
            <param name="ColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.ColumnSelected">
            <summary>
            Raised when the user selectes a column using the mouse. ColumnIndex designated the column being resized
            </summary>
            <param name="sender"></param>
            <param name="ColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.ColumnDeSelected">
            <summary>
            Raised when the user selectes a column using the mouse. ColumnIndex designated the column being resized
            </summary>
            <param name="sender"></param>
            <param name="OldColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.GridResorted">
            <summary>
            Raised when the user resorts the grids contents on a chosen column index. ColumnIndex is the chosen column.
            </summary>
            <param name="sender"></param>
            <param name="ColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.KeyPressedInGrid">
            <summary>
            Raised when the user presses a key on the keyboard while the grid has focus and a cell is not being edited.
            The Keycode parameter is of the type Keys
            </summary>
            <param name="sender"></param>
            <param name="keyCode"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.RightMouseButtonInGrid">
            <summary>
            Raised when the user presses the rightmousebutton in the grid and the grid is not doing any of its Popup context
            menus.
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.GridHover">
            <summary>
            Raised as the user loiters over the rendered grid contents with the mouse. Row/Col esignated the cell being
            hovered over, Item indicates the contents of 6the cell being hovered over.
            </summary>
            <param name="sender"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="Item"></param>
            <remarks></remarks>
        </member>
        <member name="E:TAIGridControl2.TAIGridControl.GridHoverleave">
            <summary>
            Raised as the user moved the mouse off of the grid rendered contens after hovering over those contents previously
            </summary>
            <param name="sender"></param>
            <remarks></remarks>
        </member>
        <member name="T:TAIGridControl2.TAIGridControl.TaiGridColorSchemes">
            <summary>
            Enmeration for selecting preset color schemes used to configures the theme of the grids display
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowTearAwayFunctionality">
            <summary>
            Allow or Disallow the tearaway a column functionality within the grid itself.
            Column tearaways allow for removing a columns contents to a seperate window that floats outside the
            boundarys of the grids containers. This functionality might prove useful in some circumstances but may
            also confuse the display for some users. This setting will turn on or off the availability of this function.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowExcelFunctionality">
            <summary>
            Allow or disallow the ability to export the grids contents to excel via the Context menu.
            Heavily used with some reporting applications where numerics are displayed in aggregate,
            other uses of the grid in items where personal data are displayed might
            necessitate turning the functionality off for privacy/Hipaa reasons.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowTextFunctionality">
            <summary>
            Allows or disallows the text menu functionality of the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowHTMLFunctionality">
            <summary>
            Allows or disallows the HTML menu on the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowSQLFunctionality">
            <summary>
            Allows or disallows the SQL menu off of the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowMathFunctionality">
            <summary>
            Allows or disallows the Math submenu off of the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowFormatFunctionality">
            <summary>
            Allows or disallows the Format submenu off of the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowSettingsFunctionality">
            <summary>
            Allows or disallows the settings submenu off of the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowSortFunctionality">
            <summary>
            Allows or disallows the Sort submenu off of the grids context menu.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowColumnSelection">
            <summary>
            Allows or disallows the selection of a column by clicking the header of a column with the mouse
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowControlKeyMenuPopup">
            <summary>
            Allows or disallows the pulling up of the grids context menu my pressintg the ctrl key while right mousebuttoning
            over the grid itself. This allows programs that are hosting the grids to create their own context menus but to
            still have the grids context menus available via the ctrl/right mousebutton combination.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowInGridEdits">
            <summary>
            Allows or disallows the editing of grids contents. This is not an all or nothing process. The developer hase to turn this
            on and explicitly set the columns where they want to allow editing in order for in grid edits to function.
            Alternately they might elect to restrict editing of a cells contents to s list of available selections
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowMultipleRowSelections">
            <summary>
            Allows or disallows the ability of the user to select more than a single row in the grid at one time
            via the standard CTRL/SHIFT key click mechanism used in the Windows OS. The rows selected will then
            be exposed via the <c>SelectedRows</c> collection
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowPopupMenu">
            <summary>
            Allow or disallow the grids own context menu to appear via the right mousebutton
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowRowSelection">
            <summary>
            Allow or disallow the ability to select a single or multiple rows in the grid with the mouse,
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowWhiteSpaceInCells">
            <summary>
            Will allow/disallow Whitespace in cells (newlines and what not)
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AllowUserColumnResizing">
            <summary>
            Allow or disallow user column resizing with the mouse
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AlternateColoration">
            <summary>
            Turns on or off the Alternate coloration mode of the grids display where it will alternate the background
            color of the rows inserted between <c>AlternateColorationAltColor</c> and <c>AlternateColorationBaseColor</c>
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AlternateColorationAltColor">
            <summary>
            One of the colors used when the grid is rendering in AlternateColoration mode
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AlternateColorationBaseColor">
            <summary>
            One of the colors used when the grid is rendering in AlternateColoration mode
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.Antialias">
            <summary>
            Turns on or off the smoothing mode of the grids textual rendering engine
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AutoSizeCellsToContents">
            <summary>
            Allows or disallows the grids rendering engine to automagically resize the grids row and column metrics
            to accomodate the contents being inserted into the grid manually or via one of the PopulateFromDatabase calls.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.AutoFocus">
            <summary>
            Allows or disallows the grids ability to automagically gain focus as the user mouses over the grid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.BackColor">
            <summary>
            Gets or Sets the background color for the control
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.BorderColor">
            <summary>
            The color used to render the border of the grid itself when <c>BorderStyle</c> = something
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.BorderStyle">
            <summary>
            The border style use to draw the grid border itself
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ShowProgressBar">
            <summary>
            Allows or disallows the display f the progress bar across the top of the grid itself when long database population
            processes are underway.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ShowExcelExportMessage">
            <summary>
            Allows or disallows the display of a topmost windows signaling to the end users that the grid
            is sending it's content to excel. Because messaging excel is sometime a lengthy process the display of
            the dialog might prove useful in those situations. Messaging excel though is an inherantly messy process
            where a user interacting with a different instance of excel might confuse the system and make the
            export process fail. In these cases the dialog might also prove useful in that the user can be instructed
            'Hands off' with the dialog is visable. It can however be confusing when this dialog is on top of everything.
            As always its use might prove useful or it might not depending on environmental factors.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.Cols">
            <summary>
            Get or Sets the number of columns in the grid itself
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_CellAlignment(System.Int32,System.Int32)">
            <summary>
            Get or sets the alignment of the textual element contained at Grid coordinates R (row) and C (col)
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_CellBackColor(System.Int32,System.Int32)">
            <summary>
            Gets or sets the background color of the specificied cell at R (row) and C (col)
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ColBackColorEdit">
            <summary>
            Gets or sets the background color used to render a cell when that cell is in edit mode
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_CellFont(System.Int32,System.Int32)">
            <summary>
            Gets or sets the font used to render a the cells contents. The cell is designated by
            its cordinates R (row) and C (col)
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_CellForeColor(System.Int32,System.Int32)">
            <summary>
            Gets or sets the foreground color used to render a cell at coordinated R (row) and C (col)
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.CellOutlines">
            <summary>
            Allows or disallows the rendering engins outlining of cells as it draws their contents
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_ColCheckBox(System.Int32)">
            <summary>
            Gets or sets the columns status as a boolean value where it will interpret the contents of a column
            as boolean values. 1,True,Y,y,Yes,yes and other variations will be rendered as a check checkbok
            0,False,n,N,No,no and other variatons will be rendered as unchecked checkboxes. ALl other values will
            be rendered as disabled checkboxes that are unchecked. If the column is editable then the grid will
            manage checkbox state for you toggling the contents as the user interacts with the cells contents via
            the mouse.
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_ColEditable(System.Int32)">
            <summary>
            Gets or sets the editable status of a column at index idx.
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_RowEditable(System.Int32)">
            <summary>
            Gets or sets the editable status of a Row at index idx.
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_ColWidth(System.Int32)">
            <summary>
            Gets or sets the width of a column at index idx in pixels
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_ColPassword(System.Int32)">
            <summary>
            Gets or sets the rendering text to be used for a column at index idx to be set as a password column.
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_ColMaxCharacters(System.Int32)">
            <summary>
            Gets or sets the number of characters that a clumn at index idx will display before the rendering engine will
            display the elipsis ... characters at the end.
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.DataBaseTimeOut">
            <summary>
            Gets or sets the time in seconds for a global database timeout value for all the Populate with database calls
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.DefaultCellFont">
            <summary>
            Gets or sets the default font used to render cells.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.DefaultBackgroundColor">
            <summary>
            Gets or sets the default background color used to render cells
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.DefaultForegroundColor">
            <summary>
            Gets or sets the default foreground color user to render cells
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.Delimiter">
            <summary>
            Gets or sets the default field delimiter used for the export to text methods
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridEditMode">
            <summary>
            Gets or sets the field forcing a return key on an edited cell to edit its contents or just losing focus will fire
            a cell edited event.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.EditModeCol">
            <summary>
            When the grid is in editmode this is the column that is currently being edited
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.EditModeRow">
            <summary>
            When the grid is in editmode this is the row currently being edited
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridDoingTearAwayWork">
            <summary>
            When the grid is maintaining i set of tearaway columns this will return True false otherwise
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ColOverOnMenuButton">
            <summary>
            When the user brings up the context menu this will retiurn the column they were over when the menu was called up
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.RowOverOnMenuButton">
            <summary>
            When the user brings up the context menu this will return the row they were over when the menu was called up
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridHeaderFont">
            <summary>
            Gets or sets the font used to render the column header
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridHeaderStringFormat">
            <summary>
            Gets or sets the formatting characteristics of the grid header line. (left,right,centered etc.)
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridheaderVisible">
            <summary>
            Allows or disallows the display of the grid header line
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridHeaderHeight">
            <summary>
            Gets or sets the height of the grids header in pixels
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridHeaderBackColor">
            <summary>
            Gets or sets the background color used to render the grids header
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridHeaderForeColor">
            <summary>
            Gets or sets the foreground color useed to render the grids header
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridReportOrientLandscape">
            <summary>
            Gets or sets the grids output for reporting to be landscape mode or not.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridReportOutlineCells">
            <summary>
            Gets or sets the grids reporting engine to outline cells or not
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridReportNumberPages">
            <summary>
            Gets or sets the grids reporting engine to number the output pages or not
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridReportMatchColors">
            <summary>
            Gets or sets the grids reporting engine to attempt to match reported output coloration with the onscreen
            display engines coloration scheme. Some on-screen colors dont look all that well when printed to paper,
            this is especially true wjen the printer is a black and white printer and the screen representation is
            full of various colors.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridReportTitle">
            <summary>
            Gets or sets the textual tile to apply to reported output
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.GridReportPreviewFirst">
            <summary>
            Allows or disallows the preview display when printing output from the grid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelAutoFitColumn">
            <summary>
            Allows or disallows the export to excel engines resizing excel columns to fit the contents
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelAutoFitRow">
            <summary>
            Allows or disallows the export to excel engins resize rows to fit the contents
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelAlternateColoration">
            <summary>
            Gets or sets the color used to decorate alternate rows on the excel output when matching grid color
            scheme is turned off.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelMatchGridColorScheme">
            <summary>
            Allows or disallows the export to excel engine ability to attemt to color the excel output to match the
            colors used on the onscreen grid. Not all screen colors convert to excel cleanly, and different versions
            of excel interpret colors differently. The export engine attempts to match but those matches are not always
            perfect.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelFilename">
            <summary>
            Gets or sets the name of the excel spreadsheet that is generated when the export operation is complete
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelIncludeColumnHeaders">
            <summary>
            Allows or disallows the insertion of the header column of the grid into the excel output.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelKeepAlive">
            <summary>
            Gets or sets the setting to keep excell alive and kicking after the grid has been sent to excel.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelMaximized">
            <summary>
            Gets or sets the making excel opening up maximized or not when its instances and
            messaged during the export process
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelPageOrientation">
            <summary>
            Gets or sets the orientation of the excel output for printing
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelOutlineCells">
            <summary>
            Turns on or off the outlining of cells that are populated during the export process
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelShowBorders">
            <summary>
            gets or sets the showborders cetting of cells that are populated during the export to excel process
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelUseAlternateRowColor">
            <summary>
            Gets or sets the using of the alternat coloring scheme for excel output
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelWorksheetName">
            <summary>
            Gets or sets the name of the worksheet name to be used when the export to excel process is underway
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ExcelMaxRowsPerSheet">
            <summary>
            Gets or sets the maximum rows to be sent to excel before anoher worksheet will be created to carry the remainder
            of data during the export to excel process. This Add a new worksheet and continue will take place until all the
            data in the grid is sent to excel. Excel has a limit of 65535 rows per worksheet.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_HeaderLabel(System.Int32)">
            <summary>
            Gets or sets the column header label use for the column at index idx
            </summary>
            <param name="columnID"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.IncludeFieldNames">
            <summary>
            Allows or disallows the inclusion of the header lable on grids outoput when exporting to text
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.IncludeLineTerminator">
            <summary>
            Allows or disallows the inclusion of line termination characters when exporting the grids contents to text
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the contents of the grid cell at row R and col C
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_item(System.Int32,System.String)">
            <summary>
            Gets or sets the contents of the grid cell at row R and column name colname
            </summary>
            <param name="r"></param>
            <param name="colname"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.MaxRowsSelected">
            <summary>
            Gets or sets the maximum number of rows to populate the grid with when using the various database populate
            calls. Set to 0 to have the parameter unbounded. With th rewrite in 2005 the grid can accomodate millions of
            rows of data so this setting is largely unnecessary now.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.OmitNulls">
            <summary>
            Allows or disallows the rendering of the work (NULL) on reading nulls from the varous database population methods
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.PaginationSize">
            <summary>
            Gets or sets the number of rows to scroll up or down on the pageup and pagedown keys
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.PageSettings">
            <summary>
            Gets or sets the PageSettings object used print the grids contents to windows printer devices
            allows for the developer to hand into the grid preconfigured print environments to support their
            special needs.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.Rows">
            <summary>
            Get to sets the number or rows of data contained in the current grid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.get_RowHeight(System.Int32)">
            <summary>
            Gets or sets the height of the row at index idx in pixels
            </summary>
            <param name="idx"></param>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ScrollBarWeight">
            <summary>
            Gets or sets the height or width of the horizontal and verticle scroll bars on the surface of the grid itself.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ScrollInterval">
            <summary>
            Gets or sets the amount of screen scroll that the scroll bars will move in pixels
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedColumn">
            <summary>
            Gets or sets the currently selected column ID. If more than one column is selected then the
            <c>SelectedColumns</c> arraylist will contain the set of IDs representative of the selected columns
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedRow">
            <summary>
            Gets or sets the currently selected row ID. If more than one row is selected then the <c>SelectedRows</c>
            Arraylist will contain the set of IDs representative of the selected rows
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedRows">
            <summary>
            Gets or sets the currently selected row list in the current grid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedColBackColor">
            <summary>
            Gets or sets the background color for the currently selected column in the grid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedColForeColor">
            <summary>
            Gets or sets the currently selected column foreground color in the grid
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedRowBackColor">
            <summary>
            Gets or sets the currently selected row background color
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.SelectedRowForeColor">
            <summary>
            Gets or sets the currently selected row foreground color
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.ShowDatesWithTime">
            <summary>
            Allows or disallows the display of the time portion of datetime values read from the various database populators
            if disallowed just the date portions of these datatypes will be displayed.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.TitleBackColor">
            <summary>
            Gets or sets the background color of the title bar in the displayed grid control
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.TitleFont">
            <summary>
            Gets or sets the font used to display the title of the grid control
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.TitleForeColor">
            <summary>
            Gets or sets the foreground color used to render the title of the grid control
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.TitleText">
            <summary>
            Gets or sets the actual title text displayed in the grid controls title bar
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.TitleVisible">
            <summary>
            Allows or disallows the display of the title bar on the grid control itself
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.UserColResizeMinimum">
            <summary>
            Gets or sets the minimum size in pixels the user will be allowed to resize columns to if user column
            resizeing is enabled. This settiing prevents users from resizeing columns to 0 pixels in width making them
            difficult to make visable again.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.VisibleHeight">
            <summary>
            Gets the height of the grid portion of the visable grid in pixels. Minus the height of the visible scrollbars
            if the scrollbars are visible
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.VisibleWidth">
            <summary>
            Gets the width in pixels of the grid area minus the width of the verticle scrollbar if its visible
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.XMLDataSetName">
            <summary>
            Gets or sets he name of the dataset used during the export to XML of the grids contents
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.XMLFileName">
            <summary>
            Gets or sets the filename used to export the contents of the grid to or read from during an XML import operation
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.XMLIncludeSchema">
            <summary>
            Allows or disallows the exporting of the sceme defination in the resulting xml output
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.XMLNameSpace">
            <summary>
            Gets or sets the namespace used to embed the contents of the grid into when exporting to XML
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TAIGridControl2.TAIGridControl.XMLTableName">
            <summary>
            Gets or sets the table named used to export the grids content into during xml export
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AddRowToGrid(System.String,System.String)">
            <summary>
            Takes the DelimitedSTringArray string and splits it up on the Delimiter. Then adds a row to the grids contents
            filling the newly added row with the split fields from the DelimitedStringArray.
            </summary>
            <param name="DelimitedStringArray"></param>
            <param name="Delimiter"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AddRowToGrid(System.String)">
            <summary>
            Takes the DelimitedSTringArray string and splits it up on the default delimiter of '|'.
            Then adds a row to the grids contents filling the newly added row with the split fields
            from the DelimitedStringArray.
            </summary>
            <param name="DelimitedStringArray"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AllCellsUseThisFont(System.Drawing.Font)">
            <summary>
            Sets all cells in the grid to be rendered using the Font style specified by fnt
            </summary>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AllCellsUseThisForeColor(System.Drawing.Color)">
            <summary>
            Sets all cells in the grid to use the forgroundcolor specified by fcol
            </summary>
            <param name="fcol"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AllFontsSmaller">
            <summary>
            Will decrease the size of all displayed fonts in the grid by a single point
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AllFontsLarger">
            <summary>
            Will increase the size of all displayed fonts in the grid by a single point
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AllRowsThisColor(System.Drawing.Color)">
            <summary>
            Will set all the rows in the grid to use the background color specified by startcolor
            </summary>
            <param name="startcolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AllTextThisColor(System.Drawing.Color)">
            <summary>
            Will instruct all data represented in the grid to be colored using the specified color Startcolor
            </summary>
            <param name="startcolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AlternateRowColoration(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Will take the parmeters startcolor and alternatecolor and color every other row in the grid using these two
            colors
            </summary>
            <param name="startcolor"></param>
            <param name="alternatecolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AlternateRowColoration">
            <summary>
            will take the property defined basecolor and altcolor and apply the alternaterowcoloration
            process to the contents of the grid
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ArrangeTearAwayWindows">
            <summary>
            Will iterate through the maintained list of tearaway windows attemptiong to place
            them on the screen so that they dont overlap each other. Simillar to the old windows arrange windows
            menu item from the wfw 1.1 and windows 95/98 days
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.BlankTheGrid">
            <summary>
            Erase's the contents of the grid and sets it up to contain 1 row and 1 column
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ClearAllGridCheckboxStates">
            <summary>
            resets all the columns of the grid to not be displaying boolean datatypes ( CheckBoxes )
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ClearAllText">
            <summary>
            Clears the text in the grid but leaves the columns and rows in place
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ClearAllColumnEditRestrictionLists">
            <summary>
            Clears the internal column restriction list allows all editable columns to contain any arbritrary
            textual data.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ClearSpecificColumnEditRestrictionList(System.Int32)">
            <summary>
            Removes the column edit restrinctions from the columnid designated by colid
            </summary>
            <param name="colid"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.CopyGridToClipboard">
            <summary>
            Takes the contents of the grid and copys it to the clipboard as a Tab delimited array of text elements
            suitable for pasting into excel or word.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ColumnFormat(System.Int32,System.Drawing.StringFormat)">
            <summary>
            Applys the designated stringformat object sf to the contents of the colum designated as c
            </summary>
            <param name="c"></param>
            <param name="sf"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ColumnFormatasMoney(System.Int32)">
            <summary>
            applys the standard format specification of currency to the designated column at colume id C
            </summary>
            <param name="c"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ColumnFormatasNumber(System.Int32,System.String)">
            <summary>
            applys the standard format specification of numbers to the designated column at colume id C
            </summary>
            <param name="c"></param>
            <param name="sFormat"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ColumnFormatasShortDate(System.Int32)">
            <summary>
            applys the standard format specification of short date to the designated column at colume id C
            </summary>
            <param name="c"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.CreatePersistanceScript(System.String)">
            <summary>
            Will return a string that is representative of an SQL script that will write the gridshape and its contents
            to a table in a database that the resulting script is handed to.
            </summary>
            <param name="tname"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.CreateHTMLTableScript(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Will return a string containing an HTML table representation of the grids contents
            Borderval is the size parameter of the tables borders
            Matchcolors will turn on or off the attempt to set the colors of the table to match thos of the grid itself
            OmitNulls will have the rendering of empty cells in the grid or not. (creating holes in the resuting
            html output)
            </summary>
            <param name="BorderVal"></param>
            <param name="MatchColors"></param>
            <param name="OmitNulls"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.CreateHTMLTableScript">
            <summary>
            Overload that will set the border to 1 pixel, Matchcolors, and omitnulls
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DeSelectAllRows">
            <summary>
            Will deslect all rows in the grid if any are selected
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DisplayGridToolTip(System.Object,System.String)">
            <summary>
            Will set the tooltip on the mouse to match the cells contents that its hovering over
            </summary>
            <param name="sender"></param>
            <param name="ttText"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.HideGridToolTip">
            <summary>
            Will hide the tooltip on the mouse pointer if its visible
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DoControlBreakProcessing(System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean,System.Int32,System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            The <c>DoControlBreakProcessing</c> method will as its name indicates conduct a good oldfasioned sub-total
            and grand-total parse on the contents of the grid using the old style Cobol rules for control break processing.
            <list type="bullet">
            <item>
            <c>BreakColIntArrayList</c> list needs to contain the column IDs that will be looked at to determine
            where to break and subtotal.
            </item>
            <item>
            <c>SumColumnIntegerArrayList</c> a list of column ids on which the sums will
            be calculated.
            </item>
            <item>
            <c>IgnoreCase</c> will insruct the parser to convert everything to uppercase
            before it determines if a transition is occuring and thus a break and subtotal operation is necessary.
            </item>
            <item>
            <c>ColumnToPlaceSubTotalTextIn</c> indicates the column to reiterate the criteria for the break into.
            Think of this as the label to apply to the subtotal rows.
            </item>
            <item>
            <c>SubtotalText</c> is an arbritrary string of text to be appended to the lable defined above.
            </item>
            <item>
            <c>RightAlignSubTotalText</c> will allow or disallow the right aligning of the resulting subtotal lables.
            </item>
            <item>
            <c>ColorForSubTotalRows</c> defines the backgroundcolor to use when inserting a subtotal row into the
            resulting output.
            </item>
            <item>
            <c>BlankSeperateBreaks</c> will allow or disallow the insertion of an additional blank row after a
            subtotal operation.
            </item>
            <item>
            <c>EchoBreakFieldsOnSubTotalLines</c> will allow or disallow the echoing of the criteria for the
            above subtotal operation on the line with the subtotal figures itself.
            </item>
            <item>
            <c>TreatBlanksAsSame</c> will force the parser to treat a blank field in a row to be treated as the
            most recent previous non blank field for the purposes of determining that the break is necessary.
            </item>
            </list>
            Note:
            Because the control break process works from top to bottom on the current contents of the grid
            those contents should be sorted as the results will not have any real meaning if the grids contents
            are not sorted before the call to this method.
            </summary>
            <param name="BreakColIntArrayList"></param>
            <param name="SumColumnIntegerArraylist"></param>
            <param name="IgnoreCase"></param>
            <param name="ColumnToPlaceSubtotalTextIn"></param>
            <param name="SubtotalText"></param>
            <param name="RightAlignSubTotalText"></param>
            <param name="ColorForSubTotalRows"></param>
            <param name="BlankSeperateBreaks"></param>
            <param name="EchoBreakFieldsOnSubtotalLines"></param>
            <param name="TreatBlanksAsSame"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DoControlBreakProcessing(System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean,System.Int32,System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            The <c>DoControlBreakProcessing</c> method will as its name indicates conduct a good oldfasioned sub-total
            and grand-total parse on the contents of the grid using the old style Cobol rules for control break processing.
            <list type="bullet">
            <item>
            <c>BreakColIntArrayList</c> list needs to contain the column IDs that will be looked at to determine
            where to break and subtotal.
            </item>
            <item>
            <c>SumColumnIntegerArrayList</c> a list of column ids on which the sums will
            be calculated.
            </item>
            <item>
            <c>IgnoreCase</c> will insruct the parser to convert everything to uppercase
            before it determines if a transition is occuring and thus a break and subtotal operation is necessary.
            </item>
            <item>
            <c>ColumnToPlaceSubTotalTextIn</c> indicates the column to reiterate the criteria for the break into.
            Think of this as the label to apply to the subtotal rows.
            </item>
            <item>
            <c>SubtotalText</c> is an arbritrary string of text to be appended to the lable defined above.
            </item>
            <item>
            <c>RightAlignSubTotalText</c> will allow or disallow the right aligning of the resulting subtotal lables.
            </item>
            <item>
            <c>ColorForSubTotalRows</c> defines the backgroundcolor to use when inserting a subtotal row into the
            resulting output.
            </item>
            <item>
            <c>BlankSeperateBreaks</c> will allow or disallow the insertion of an additional blank row after a
            subtotal operation.
            </item>
            <item>
            <c>EchoBreakFieldsOnSubTotalLines</c> will allow or disallow the echoing of the criteria for the
            above subtotal operation on the line with the subtotal figures itself.
            </item>
            
            </list>
            Note:
            Because the control break process works from top to bottom on the current contents of the grid
            those contents should be sorted as the results will not have any real meaning if the grids contents
            are not sorted before the call to this method.
            </summary>
            <param name="BreakColIntArrayList"></param>
            <param name="SumColumnIntegerArraylist"></param>
            <param name="IgnoreCase"></param>
            <param name="ColumnToPlaceSubtotalTextIn"></param>
            <param name="SubtotalText"></param>
            <param name="RightAlignSubTotalText"></param>
            <param name="ColorForSubTotalRows"></param>
            <param name="BlankSeperateBreaks"></param>
            <param name="EchoBreakFieldsOnSubtotalLines"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DoControlBreakColorization(System.Collections.ArrayList,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            This will take the supplied <c>BreakColIntArrayList</c> and do a cell colorization operation
            on the current grids contents alternating between <c>StartColor</c> and <c>AltColor</c> on a change
            in the cols id'd in the supplied arraylist.
            </summary>
            <param name="BreakColIntArrayList"></param>
            <param name="StartColor"></param>
            <param name="AltColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DoControlBreakSubTotals(System.Collections.ArrayList,System.Int32,System.Boolean,System.Collections.ArrayList,System.Drawing.Color,System.Int32)">
            <summary>
            Another control break process,
            <list type="bullet">
            <item>
            <c>BreakColIntArrayValues</c> list needs to contain the column IDs that will be looked at to determine
            where to break and subtotal.
            </item>
            <item>
            <c>IgnoreCase</c> will insruct the parser to convert everything to uppercase
            before it determines if a transition is occuring and thus a break and subtotal operation is necessary.
            </item>
            <item>
            <c>SumColumnIntegerArrayList</c> a list of column ids on which the sums will
            be calculated.
            </item>
            <item>
            <c>ColorForBreakSubtotals</c> defines the backgroundcolor to use when inserting a subtotal row into the
            resulting output.
            </item>
            <item>
            <c>CutoffRow</c> The maximum row to search for in the grid for processing.
            will stop processing at <c>CutoffRow</c>
            </item>
            
            </list>
            Note:
            Because the control break process works from top to bottom on the current contents of the grid
            those contents should be sorted as the results will not have any real meaning if the grids contents
            are not sorted before the call to this method.
            </summary>
            <param name="BreakColArrayValues"></param>
            <param name="ColToFindValues"></param>
            <param name="IgnoreCase"></param>
            <param name="SumColumnIntegerArrayList"></param>
            <param name="ColorForBreakSubtotals"></param>
            <param name="CutoffRow"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DoSelectedRowHighlight(System.Int32)">
            <summary>
            Will select and highlight the indicated rownum as if the user had selected it with the mouse
            </summary>
            <param name="rownum"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToExcel">
            <summary>
            Will instance Microsoft excel and place the contents of the grid on the first worksheet in the excel application
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToExcel(Microsoft.Office.Interop.Excel.Application,Microsoft.Office.Interop.Excel.Workbook,System.String)">
            <summary>
            Will take the supplied instance of Microsoft excel <c>_excel</c> and place the contents of the grid on the
            worksheet named <c>wsname</c> in the supplied workbook <c>_Workbook</c>
            </summary>
            <param name="_excel"></param>
            <param name="_WorkBook"></param>
            <param name="wsname"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToText">
            <summary>
            Will open the internal export filename dialog querying the user for the filename to export to
            Will then export the contents of the grid to a textfile employing the properties setup by
            displayed dialog, Filename, Include column headers as fieldname, the field terminator, and the line
            terminator...
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToText(System.String)">
            <summary>
            Will export the contents of the grid to the supplied filename <c>sFilename</c> employing the internally set properties
            to control the field delimiters, line terminators, and inclusion of column headers as field names...
            </summary>
            <param name="sFilename"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToText(System.String,System.String)">
            <summary>
            Will export the contens of the grid to a file named <c>sFilename</c> with the field delimiters of <c>sDelimiter</c>
            The internal properties will control the inclusion of column headers as field names and the characters used to terminate
            the lines of output
            </summary>
            <param name="sFilename"></param>
            <param name="sDelimiter"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToText(System.String,System.String,System.Boolean)">
            <summary>
            Will export the contents of the grid to a textfile name <c>sFilename</c> using <c>sDelimiter</c> for
            field delimiters and using <c>bIncludeFieldNames</c> to control inclusion of the column headers as field names
            the interna;l property for the end of the lines termination will be employed.
            </summary>
            <param name="sFilename"></param>
            <param name="sDelimiter"></param>
            <param name="bIncludeFieldNames"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ExportToText(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Will export the contents of the grid to <c>sFilename</c> employing <c>sDelimiter</c> for the field delimiters
            <c>bIncludeFieldNames</c> to control inclusion of the column headers as field names, and the <c>bIncludeLineTerminator</c>
            to control the CRLF at the end of the lines of output
            </summary>
            <param name="sFileName"></param>
            <param name="sDelimiter"></param>
            <param name="bIncludeFieldNames"></param>
            <param name="bIncludeLineTerminator"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.DistinctInColumn(System.Int32)">
            <summary>
            Will return a list(of string) of the unique values contained in ColId of the current grid contents
            </summary>
            <param name="ColId"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.FindInColumn(System.String,System.Int32)">
            <summary>
            will do a case insensitive rip through grid col colvalue searching for strvalue
            on finding it will return id value of the row where the search was successful
            -1 otherwise
            </summary>
            <param name="strValue"></param>
            <param name="colvalue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.FindInColumn(System.String,System.Int32,System.Boolean)">
            <summary>
            will do a case insensative or sensitive  (depending on the CaseSensitive parameter)
            rip through grid col colvalue searching for strvalue
            on finding it will return id value of the row where the search was successful
            -1 otherwise
            </summary>
            <param name="strValue"></param>
            <param name="colvalue"></param>
            <param name="CaseSensitive"></param>
            <returns>Will return the first row ID of the search or -1 if the search is unsuccessful</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.FreeGridContentImage">
            <summary>
            will free the memory associated with the internal captured image of the grids contents
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetColumnIDByName(System.String,System.Boolean)">
            <summary>
            Will return the column ID of the first column matching name. CaseSensative will toggle the search matching
            the case of the searched name.
            </summary>
            <param name="name"></param>
            <param name="CaseSensitive"></param>
            <returns>Column ID of the first match, -1 if not found</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetColumnIDByName(System.String)">
            <summary>
            Will return the column ID of the first column matching name. The search is not case sensative.
            </summary>
            <param name="name"></param>
            <returns>Column ID of the first match, -1 if not found</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetDistinctColumnEntries(System.Int32)">
            <summary>
            Will return an ArrayList of distinct values contained in a given Column within the grids
            current contents. Column searched indicated by colid. Search will ignore case differences.
            </summary>
            <param name="colid"></param>
            <returns>ArrayList of distinct values sorted</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetDistinctColumnEntries(System.Int32,System.Boolean)">
            <summary>
            Will return an ArrayList of distinct values contained in a given Column within the grids
            current contents. Column searched indicated by colid. The ignorecase parameter will
            allow or disallow the differences in case to be taken into account.
            </summary>
            <param name="colid"></param>
            <param name="ignorecase"></param>
            <returns>ArrayList of distinct values sorted</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetDistinctColumnEntries(System.Int32,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Will return an ArrayList of distinct values contained in a given Column within the grids
            current contents. Column searched indicated by colid. The parameter for the Exclusionlist will
            contain any values you wish to omit from the results. The ignorecase parameter will
            allow or disallow the differences in case to be taken into account.
            </summary>
            <param name="colid"></param>
            <param name="exclusionlist"></param>
            <param name="ignorecase"></param>
            <returns>ArrayList of distinct values sorted</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetGridAsArray">
            <summary>
            Returns the grids contents as a two dimensional array of string values
            </summary>
            <returns>2 dimensional array of strings representative of the ccurrent contents of the grid</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetRowBackgroundsBasedOnValue(System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Scans ColID for Values in ColVals and colors each row where ColID contains ColVal with corresponding ColorVal
            </summary>
            <param name="Colid"></param>
            <param name="Colvals"></param>
            <param name="ColorVals"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetGridContentsAsImage">
            <summary>
            Returns the contents of the grid as a 24 bit bitmat System.Drawing.Bitmap
            Useful for when the contents of the grid need to be image mapped onto another
            surface like a 3D rotating cube (believe it or not) or perhaps a printer page context.
            </summary>
            <returns>24 Bit System.Drawing.Bitmap</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetRowAsString(System.Int32)">
            <summary>
            Will return a row in the grid as a string with '|' character delimitring the columns.
            </summary>
            <param name="rowid"></param>
            <returns>String representation of the row in the grid at rowid with '|' characters between the fields</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetColAsArrayList(System.Int32)">
            <summary>
            Will return the indicated column at col as an Arraylist of values
            </summary>
            <param name="col"></param>
            <returns>ArrayList indicating the contents of the column at col</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetColAsCleanedArrayList(System.Int32)">
            <summary>
            Will return the indicated column at col as an Arraylist of values. The values will be cleaned
            of specific formatting prior to being returned. Dollar values will have the $() and ,'s removed
            numeric values will be converted represent the numeric string representation. This is useful to
            subsequent insertion into an excel spreadsheet for example.
            </summary>
            <param name="col"></param>
            <returns>ArrayList indicating the contents of the column at col</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetRowAsArrayList(System.Int32)">
            <summary>
            Will return the indicated row as an arraylist of values
            </summary>
            <param name="row"></param>
            <returns>Arraylist of values at row</returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.InsertRowsIntoGridAt(System.Int32,System.Int32)">
            <summary>
            Will insert numrows of blank space into the grid at row atrow.
            </summary>
            <param name="atrow"></param>
            <param name="numrows"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.KillAllTearAwayColumnWindows">
            <summary>
            Will close and release all open tearaway windows currentl being maintained by the grid
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.KillTearAwayColumnWindow(System.Int32)">
            <summary>
            Will kill any tearaway windows being maintained by the grid for the indicated column it colid
            </summary>
            <param name="colid"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.LowerGridHoverEvents">
            <summary>
            Will fire the GridHoverleave event if the grid is not maintaining any tearaway windows at the moment
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromWQL(System.String)">
            <summary>
            Will populate the grid with the results of a call to the System.Management classes with a properly
            formatted wql query (Windows Query Language) call.
            
            Example:
            <c>Select * from Win32_Printer</c>
            
            </summary>
            <param name="wql"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.String[0:,0:],System.Drawing.Font,System.Drawing.Color,System.Boolean,System.Boolean,System.String[])">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, employing the supplied parameters
            to control
            <list type="Bullet">
            <item><c>gridfont</c> will employ this font for the cell contents</item>
            <item><c>col</c> will be used as the color for the displays cell items</item>
            <item><c>FirstRowHeader</c> if true will treat the first row in the array as the names for each column header</item>
            <item><c>AutoHeader</c> if true will automatically name each column COLUMN - {ordinal} as it populates the grid</item>
            <item><c>hdr</c> an array of strings that will be used as the column labels if the other column options are False</item>
            </list>
            </summary>
            <param name="arr"></param>
            <param name="gridfont"></param>
            <param name="col"></param>
            <param name="FirstRowHeader"></param>
            <param name="AutoHeader"></param>
            <param name="hdr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.String[0:,0:],System.Drawing.Font,System.Drawing.Color,System.Boolean)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, employing the supplied parameters
            to control
            <list type="Bullet">
            <item><c>gridfont</c> will employ this font for the cell contents</item>
            <item><c>col</c> will be used as the color for the displays cell items</item>
            <item><c>FirstRowHeader</c> if true will treat the first row in the array as the names for each column header
            if its false the columns will be automatically named</item>
            </list>
            </summary>
            <param name="arr"></param>
            <param name="gridfont"></param>
            <param name="col"></param>
            <param name="FirstRowHeader"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.String[0:,0:])">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, using the first row of values
            to named each column
            </summary>
            <param name="arr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.String[0:,0:],System.Drawing.Font)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, using the first row of values
            to name each column each cell will be displayed the the supplied <c>cellfont</c>
            </summary>
            <param name="arr"></param>
            <param name="CellFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.String[0:,0:],System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, using the first row of values
            to name each column each cell will be displayed the the supplied <c>Forecolor</c>
            </summary>
            <param name="arr"></param>
            <param name="Forecolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.String[0:,0:],System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, using the first row of values
            to name each column each cell will be displayed the the supplied <c>cellfont</c> and <c>Forecolor</c>
            </summary>
            <param name="arr"></param>
            <param name="Cellfont"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int32[0:,0:],System.Drawing.Font,System.Drawing.Color,System.Boolean)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of stings <c>arr</c>, using the first row of values
            to name each column each cell will be displayed the the supplied <c>gridfont</c> and <c>col</c> color and
            if <c>FirstRowHeader</c> is true will use the first row to label each column, if not, then the first row will be auto
            labled with Column - {ordinal}
            </summary>
            <param name="arr"></param>
            <param name="gridfont"></param>
            <param name="col"></param>
            <param name="FirstRowHeader"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int32[0:,0:])">
            <summary>
            Will populate the grids contents from an 2 dimensional array of integers <c>arr</c> converted to strings, using the first row of values
            to name each column
            </summary>
            <param name="arr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int32[0:,0:],System.Drawing.Font)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of integers <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Cellfont</c> will be used as the font for each new cell
            </summary>
            <param name="arr"></param>
            <param name="CellFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int32[0:,0:],System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of integers <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Forecolor</c> will be used as the foreground color for each new cell
            </summary>
            <param name="arr"></param>
            <param name="Forecolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int32[0:,0:],System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of integers <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Forecolor</c> will be used as the foreground color for each new cell and <c>Cellfont</c> will be used
            for each new cells font
            </summary>
            <param name="arr"></param>
            <param name="Cellfont"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int64[0:,0:],System.Drawing.Font,System.Drawing.Color,System.Boolean)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of longs <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>col</c> will be used as the foreground color for each new cell and <c>gridfont</c> will be used if
            <c>FirstRowHeader</c> is true the first row of data in the array will be used to name each column otherwise the columns will be
            named Column - {ordinal}
            </summary>
            <param name="arr"></param>
            <param name="gridfont"></param>
            <param name="col"></param>
            <param name="FirstRowHeader"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int64[0:,0:])">
            <summary>
            Will populate the grids contents from an 2 dimensional array of longs <c>arr</c> converted to strings, using the first row of values
            to name each column
            </summary>
            <param name="arr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int64[0:,0:],System.Drawing.Font)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of longs <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Cellfont</c> will be used as the font for each new cell
            </summary>
            <param name="arr"></param>
            <param name="CellFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int64[0:,0:],System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of longs <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Forecolor</c> will be used as the foreground color for each new cell
            </summary>
            <param name="arr"></param>
            <param name="Forecolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Int64[0:,0:],System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of longs <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Forecolor</c> will be used as the foreground color for each new cell and <c>Cellfont</c> will be used
            for each new cells font
            </summary>
            <param name="arr"></param>
            <param name="Cellfont"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Double[0:,0:],System.Drawing.Font,System.Drawing.Color,System.Boolean)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of doubles <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>col</c> will be used as the foreground color for each new cell and <c>gridfont</c> will be used if
            <c>FirstRowHeader</c> is true the first row of data in the array will be used to name each column otherwise the columns will be
            named Column - {ordinal}
            </summary>
            <param name="arr"></param>
            <param name="gridfont"></param>
            <param name="col"></param>
            <param name="FirstRowHeader"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Double[0:,0:])">
            <summary>
            Will populate the grids contents from an 2 dimensional array of Doubles <c>arr</c> converted to strings, using the first row of values
            to name each column
            </summary>
            <param name="arr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Double[0:,0:],System.Drawing.Font)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of Doubles <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Cellfont</c> will be used as the font for each new cell
            </summary>
            <param name="arr"></param>
            <param name="CellFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Double[0:,0:],System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of Doubles <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Forecolor</c> will be used as the foreground color for each new cell
            </summary>
            <param name="arr"></param>
            <param name="Forecolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridFromArray(System.Double[0:,0:],System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Will populate the grids contents from an 2 dimensional array of Doubles <c>arr</c> converted to strings, using the first row of values
            to name each column. <c>Forecolor</c> will be used as the foreground color for each new cell and <c>Cellfont</c> will be used
            for each new cells font
            </summary>
            <param name="arr"></param>
            <param name="Cellfont"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PolulateGridWithDataAt(System.String,System.String,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Will allow a database populate of a grid within an already populated grid of data.
            The effect will be to insert data from a carefully crafted query into a rectangular region of an
            existing grid of data.
            <list type="Bullet">
            <item><c>ConnectionString</c> the database connection to be employed</item>
            <item><c>Sql</c> the sql code to be used to retrieve the data to be inserted</item>
            <item><c>AtRow</c> the integer offset row to start populating the data at</item>
            <item><c>newbackcolor</c> the color to be used to setup the background of the cells for the new data</item>
            <item><c>newheadercolor</c> the color to use for the header that will be created from the queried data</item>
            <item><c>ColOffset</c> the column offset from the edge to start populating</item>
            </list>
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Atrow"></param>
            <param name="newbackcolor"></param>
            <param name="newheadercolor"></param>
            <param name="ColOffSet"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PolulateGridWithDataAt(System.String,System.String,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Will allow a database populate of a grid within an already populated grid of data.
            The effect will be to insert data from a carefully crafted query into a rectangular region of an
            existing grid of data.
            <list type="Bullet">
            <item><c>ConnectionString</c> the database connection to be employed</item>
            <item><c>Sql</c> the sql code to be used to retrieve the data to be inserted</item>
            <item><c>AtRow</c> the integer offset row to start populating the data at</item>
            <item><c>newbackcolor</c> the color to be used to setup the background of the cells for the new data</item>
            <item><c>newheadercolor</c> the color to use for the header that will be created from the queried data</item>
            </list>
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Atrow"></param>
            <param name="newbackcolor"></param>
            <param name="newheadercolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PolulateGridWithDataAt(System.String,System.String,System.Int32,System.Drawing.Color)">
            <summary>
            Will allow a database populate of a grid within an already populated grid of data.
            The effect will be to insert data from a carefully crafted query into a rectangular region of an
            existing grid of data. this call will omit the header for the inserted result...
            <list type="Bullet">
            <item><c>ConnectionString</c> the database connection to be employed</item>
            <item><c>Sql</c> the sql code to be used to retrieve the data to be inserted</item>
            <item><c>AtRow</c> the integer offset row to start populating the data at</item>
            <item><c>newbackcolor</c> the color to be used to setup the background of the cells for the new data</item>
            </list>
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Atrow"></param>
            <param name="newbackcolor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PolulateGridWithDataAt(System.String,System.String,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            Will allow a database populate of a grid within an already populated grid of data.
            The effect will be to insert data from a carefully crafted query into a rectangular region of an
            existing grid of data. this call will omit the header for the inserted result...
            <list type="Bullet">
            <item><c>ConnectionString</c> the database connection to be employed</item>
            <item><c>Sql</c> the sql code to be used to retrieve the data to be inserted</item>
            <item><c>AtRow</c> the integer offset row to start populating the data at</item>
            <item><c>newbackcolor</c> the color to be used to setup the background of the cells for the new data</item>
            <item><c>allowDups></c> Will not insert any rows that already exist in the grid if set to false</item>
            </list>
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Atrow"></param>
            <param name="newbackcolor"></param>
            <param name="allowDups"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.Data.SqlClient.SqlDataReader@,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Will take the supplied SQLDataReader <c>SQLDR</c> and will automatically populate the grid with its contents using
            <c>col</c> for the foreground color and <c>gridfont</c> for the cells font style
            </summary>
            <param name="SQLDR"></param>
            <param name="col"></param>
            <param name="gridfont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.Data.SqlClient.SqlDataReader@)">
            <summary>
            Will take the supplied SQLDataReader <c>SQLDR</c> and will automatically populate the grid with its contents using
            the grids default coloring and fonts for the cells content (settable using the propertries of the grid itself
            </summary>
            <param name="SQLDR"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.Data.SqlClient.SqlDataReader@,System.Drawing.Color)">
            <summary>
            Will take the supplied SQLDataReader <c>SQLDR</c> and will automatically populate the grid with its contents using
            <c>ForeColor</c> for the foreground color and <c>gridfont</c> for the cells font style
            </summary>
            <param name="SQLDR"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.Data.SqlClient.SqlDataReader@,System.Drawing.Font)">
            <summary>
            Will take the supplied SQLDataReader <c>SQLDR</c> and will automatically populate the grid with its contents using
            <c>GridFont</c> for the cells font style
            </summary>
            <param name="SQLDR"></param>
            <param name="GridFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.String,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Will take the supplied <c>ConnectionString</c> and <c>Sql</c> code and query the database gathering the results and populaating the grid
            with those results. <c>GridFont</c> and <c>col</c> be used to generate the font and the foreground color for the cell contents
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Gridfont"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.String,System.String)">
            <summary>
            Will take the supplied <c>ConnectionString</c> and <c>Sql</c> code and query the database gathering the results and populaating the grid
            the grids defauls will be used for the cells fonts and coloring characteristics
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.String,System.String,System.Drawing.Color)">
            <summary>
            Will take the supplied <c>ConnectionString</c> and <c>Sql</c> code and query the database gathering the results and populaating the grid
            the <c>col</c> parameter wwill be used for the cell foreground coloring
            the grids defauls will be used for the cells fonts and other coloring characteristics
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithData(System.String,System.String,System.Drawing.Font)">
            <summary>
            Will take the supplied <c>ConnectionString</c> and <c>Sql</c> code and query the database gathering the results and populaating the grid
            the <c>fnt</c> parameter wwill be used for the cell fonts
            the grids defauls will be used for the cells other coloring characteristics
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.Data.SqlClient.SqlDataReader@,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="SQLDR"></param>
            <param name="col"></param>
            <param name="gridfont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.Data.SqlClient.SqlDataReader@)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="SQLDR"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.Data.SqlClient.SqlDataReader@,System.Drawing.Color)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="SQLDR"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.Data.SqlClient.SqlDataReader@,System.Drawing.Font)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="SQLDR"></param>
            <param name="GridFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.String,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Gridfont"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.String,System.String)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.String,System.String,System.Drawing.Color)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SQLPopulateGridWithData(System.String,System.String,System.Drawing.Font)">
            <summary>
            A synonym for the PopulateGridWithData method of the same signature
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.Data.OleDb.OleDbDataReader@,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OleDbDataReader <c>OLEDR</c> instead
            </summary>
            <param name="OLEDR"></param>
            <param name="col"></param>
            <param name="gridfont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.Data.OleDb.OleDbDataReader@)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OleDbDataReader <c>OLEDR</c> instead
            </summary>
            <param name="OLEDR"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.Data.OleDb.OleDbDataReader@,System.Drawing.Color)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OleDbDataReader <c>OLEDR</c> instead
            </summary>
            <param name="OLEDR"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.Data.OleDb.OleDbDataReader@,System.Drawing.Font)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OleDbDataReader <c>OLEDR</c> instead
            </summary>
            <param name="OLEDR"></param>
            <param name="GridFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.String,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for OLE data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Gridfont"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.String,System.String)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for OLE data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.String,System.String,System.Drawing.Color)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for OLE data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.OLEPopulateGridWithData(System.String,System.String,System.Drawing.Font)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for OLE data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.Data.Odbc.OdbcDataReader@,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OdbcDataReader <c>OdbcDR</c> instead
            </summary>
            <param name="OdbcDR"></param>
            <param name="col"></param>
            <param name="gridfont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.Data.Odbc.OdbcDataReader@)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OdbcDataReader <c>OdbcDR</c> instead
            </summary>
            <param name="OdbcDR"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.Data.Odbc.OdbcDataReader@,System.Drawing.Color)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OdbcDataReader <c>OdbcDR</c> instead
            </summary>
            <param name="OdbcDR"></param>
            <param name="ForeColor"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.Data.Odbc.OdbcDataReader@,System.Drawing.Font)">
            <summary>
            As the PopulateGridWithData method of the same signature but uses an OdbcDataReader <c>OdbcDR</c> instead
            </summary>
            <param name="OdbcDR"></param>
            <param name="GridFont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.String,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for ODBC data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Gridfont"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.String,System.String)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for ODBC data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.String,System.String,System.Drawing.Color)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for ODBC data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="Col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ODBCPopulateGridWithData(System.String,System.String,System.Drawing.Font)">
            <summary>
            As the PopulateGridWithData method of the same signature but <c>ConnectionString</c> parameter must be in the correct
            syntax for ODBC data access
            </summary>
            <param name="ConnectionString"></param>
            <param name="Sql"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.Drawing.Color)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.Drawing.Font)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="col"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.String)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="delimiter"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.String,System.Drawing.Color)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="delimiter"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.String,System.Drawing.Font)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="delimiter"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateViaWebServiceString(System.String,System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            The Webservice set of populators actually are forms of populators from formatted string similar to populat from text files
            The difference being that defines webservices were returning these formatted strings of text. Back before the days of being
            able to send complex data types across the HTTP wire. Carefully crafted webservices could spit out their results as streams
            of delimited text. These methods would then parse that text and rehydrate the results into the grid for viuual presentation.
            the TAIClient Time Tracking tool employes this technique. The various parameters are self explanitory
            </summary>
            <param name="WebServiceResults"></param>
            <param name="Delimiter"></param>
            <param name="col"></param>
            <param name="fnt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PivotPopulate(TAIGridControl2.TAIGridControl,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            The pivot populate calls simulate pivot table functionality in excel.
            The instance grid that the pethod is called on will be populated with data from a source grid <c>sgrid</c>
            The defined <c>xcol</c> and <c>ycol</c> parameters will be used to search the source grid for unique values
            then for each unique value set in each of the two columns the
            </summary>
            <param name="sgrid"></param>
            <param name="xcol"></param>
            <param name="ycol"></param>
            <param name="scol"></param>
            <param name="FormatSpec"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithADataTable(System.Data.DataSet)">
            <summary>
            Will take the supplied dataSet and extract the first table from that dataset and populate the grid with the
            contents of that datatable
            </summary>
            <param name="dset"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateGridWithADataTable(System.Data.DataTable)">
            <summary>
            Will take thge supplied datatable and populate the grid with the contents oif that datatable
            </summary>
            <param name="dt"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents.
            The grid will then be cleared and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size.
            </summary>
            <param name="Dirname"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.Drawing.Font)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents.
            The grid will then be cleared and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size. The supplied
            <c>gridfont</c> font will be used to show the content generated.
            </summary>
            <param name="Dirname"></param>
            <param name="Gridfont"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.Drawing.Color)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents.
            The grid will then be cleared and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size. The supplied
            <c>col</c> color will be used to show the content generated.
            </summary>
            <param name="Dirname"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents.
            The grid will then be cleared and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size. The supplied
            <c>col</c> color and <c>gridfont</c> font will be used to show the content generated.
            </summary>
            <param name="Dirname"></param>
            <param name="Gridfont"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.String)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents via the supplied
            pattern <c>Pattern</c>. The grid will then be clears and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size.
            </summary>
            <param name="Dirname"></param>
            <param name="Pattern"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.Drawing.Font,System.String)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents via the supplied
            pattern <c>Pattern</c>. The grid will then be clears and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size. The supplied
            <c>gridfont</c> font will be used to show the content generated.
            </summary>
            <param name="Dirname"></param>
            <param name="Gridfont"></param>
            <param name="Pattern"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.Drawing.Color,System.String)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents via the supplied
            pattern <c>Pattern</c>. The grid will then be clears and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size. The supplied
            <c>col</c> color will be used to show the content generated.
            </summary>
            <param name="Dirname"></param>
            <param name="col"></param>
            <param name="Pattern"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PopulateFromADirectory(System.String,System.Drawing.Font,System.Drawing.Color,System.String)">
            <summary>
            Will open the directory specified by <c>Dirname</c> and will enumerate its contents via the supplied
            pattern <c>Pattern</c>. The grid will then be clears and the results enumerated in the grids
            contents showing the FileName, Last Update Time, and physical size. The supplied
            <c>col</c> color and <c>gridfont</c> font will be used to show the content generated.
            </summary>
            <param name="Dirname"></param>
            <param name="gridfont"></param>
            <param name="col"></param>
            <param name="Pattern"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AppendPopulate(System.String)">
            <summary>
            Attempts to open the directory specfied by <c>Dirname</c> and enumerate the entire contents
            The results are the appended to the current grids contents
            The FileName, Last Update Time, and physical size are enumerated.
            </summary>
            <param name="Dirname"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.AppendPopulate(System.String,System.String)">
            <summary>
            Attempts to open the directory specfied by <c>Dirname</c> and enumerate the contents via the supplied <c>Pattern</c>
            The results are the appended to the current grids contents
            The FileName, Last Update Time, and physical size are enumerated.
            </summary>
            <param name="Dirname"></param>
            <param name="Pattern"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RaiseCellClickedEvent(System.Int32,System.Int32)">
            <summary>
            Will fire the CellClicked event from the outside world
            </summary>
            <param name="Row"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RaiseCellDoubleClickedEvent(System.Int32,System.Int32)">
            <summary>
            Will fire the CellDoubleClicked event from the outside world
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RaiseGridHoverEvents(System.Object,System.Int32,System.Int32,System.String)">
            <summary>
            Will fire the GridHover event from the outside world
            </summary>
            <param name="sender"></param>
            <param name="rowid"></param>
            <param name="colid"></param>
            <param name="textvalue"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RemoveRowFromGrid(System.Int32)">
            <summary>
            Will remove a specified row of data from the grids contents
            If rowid is greater than rows in the grid nothing will be removed
            </summary>
            <param name="rowid"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RemoveRowsFromGrid(System.Collections.ArrayList)">
            <summary>
            Will attempt to remove specific rowws from the grid contained in the supplied
            arraylist of integers
            </summary>
            <param name="ListOfRows"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RemoveColFromGrid(System.Int32)">
            <summary>
            Will attempt to remove a specific column from the grids contents
            If colid is greater than the number of columns in the grid nothing will
            be removed
            </summary>
            <param name="colid"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ReplaceColMonthNumericWithMonthName(System.Int32)">
            <summary>
            Will attempt to walk the contents of a column for integers 1 through 12
            on finding a 1 through 12 it will replace the integers with the name of that
            month number IE 1 = January, 2 = February...
            </summary>
            <param name="columnid"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ResizeTearawayColumnsHorizontally(System.Int32)">
            <summary>
            Will walk the list of columns tornaway and will set the windows to be siz width
            </summary>
            <param name="siz"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ResizeTearawayColumnsVertically(System.Int32)">
            <summary>
            Will walk the list of torn away columns and will set each one to siz height
            </summary>
            <param name="siz"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ResizeTearawayColumnsVerticallyAndHorizontally(System.Int32,System.Int32)">
            <summary>
            Will walk the list of torn away columns and will set each to sizx width andf sizy height
            </summary>
            <param name="sizx"></param>
            <param name="sizy"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RestrictColumnEditsTo(System.Int32,System.String)">
            <summary>
            Will set the column at colid edit restrictions to the list contained in the CaretDelimitedString
            </summary>
            <param name="colid"></param>
            <param name="CaretDelimitedString"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RestrictColumnEditsTo(System.Int32,System.Collections.ArrayList)">
            <summary>
            Will set the column at colid edit restrictions list to the supplied ArrayListOfStrings
            </summary>
            <param name="colid"></param>
            <param name="ArrayListOfStrings"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PlaceGridOnGraphicsContext(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Will attempt to render the grids surface onto the supplied graphics context GR, The grid will be rendered into the rectangle denoted by
            xloc,yloc and width and height
            </summary>
            <param name="gr"></param>
            <param name="xloc"></param>
            <param name="yloc"></param>
            <param name="width"></param>
            <param name="height"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PullAllTearAwaysToTheFront">
            <summary>
            Walks the list of open tear away columns and sets the to be on top of all windows
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PushAllTearAwaysToTheBack">
            <summary>
            Walks the list of tear away columns and sets them to be behind all open windows.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SelectAllRows">
            <summary>
            Selects all rows in the current grid
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SelectRows(System.Collections.ArrayList)">
            <summary>
            Selects rows in the current grid from an arraylist of row IDs
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetAllCellBackcolors(System.Drawing.Color)">
            <summary>
            Sets the background color for all cells in the grid to be the supplied color
            </summary>
            <param name="color"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetAllCellForecolors(System.Drawing.Color)">
            <summary>
            Sets the foreground color for all cells in the grid to be the supplied color
            </summary>
            <param name="color"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetColBackColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets all the cells in the specific column Col to be the the supplied color in the background
            </summary>
            <param name="Col"></param>
            <param name="color"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetColForeColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets all the cells in the specific column Col to be the the supplied color in the foreground
            </summary>
            <param name="Col"></param>
            <param name="color"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetColorScheme(TAIGridControl2.TAIGridControl.TaiGridColorSchemes)">
            <summary>
            Applied the specified enumerated colorscheme to the grids contents
            </summary>
            <param name="Scheme"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetEditItemText(System.String)">
            <summary>
            Will apply the supplied <c>ItemToSet</c> to the cell currently being edited in the grid
            </summary>
            <param name="ItemToSet"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetEditItem(System.Int32,System.Int32)">
            <summary>
            Attempts to set the cell at <c>row</c> and <c>col</c> to be in edit mode
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetRowBackColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets the row at <c>row</c> to be the corresponging <c>color</c> background color
            </summary>
            <param name="row"></param>
            <param name="color"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetRowForeColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets the row at <c>row</c> to have the corresponding <c>color</c> foreground color
            </summary>
            <param name="row"></param>
            <param name="color"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SortGridOnColumn(System.Int32,System.Boolean)">
            <summary>
            Will attempt to sort the contents of the current grid on <c>col</c>
            If <c>Descending</c> is true or false will dictate the order of the sort
            </summary>
            <param name="col"></param>
            <param name="Descending"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SortGridOnColumnDate(System.Int32,System.Boolean)">
            <summary>
            Will atempt to sort the grids contents on <c>col</c> treating the column contents as dates.
            The <c>Descending</c> parameter will distate the order of the sort
            </summary>
            <param name="col"></param>
            <param name="Descending"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SortGridOnColumnNumeric(System.Int32,System.Boolean)">
            <summary>
            Will atempt to sort the grids contents on <c>col</c> treating the column contents as numbers.
            The <c>Descending</c> parameter will distate the order of the sort
            </summary>
            <param name="col"></param>
            <param name="Descending"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SumUpColumn(System.Int32)">
            <summary>
            Will attempt to add all the values in a column denoted by <c>colnum</c> and return
            the sum as a double
            </summary>
            <param name="colnum"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SetVertScrollbarPosition(System.Int32)">
            <summary>
            Manually sets the position of the verticle scrollbar of the grid if the contents are larger
            than the physical grid window.
            </summary>
            <param name="sb"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.WordWrapColumn(System.Int32,System.Int32)">
            <summary>
            Will attempt to wrap the text data in a specified <c>col</c> at <c>wraplen</c> length.
            The wrap is smat in that it tries to wrap on whitespace boundaries
            </summary>
            <param name="col"></param>
            <param name="wraplen"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetColumnSTDEV(System.Int32)">
            <summary>
            Will return the computed STDEV of all the numbers contained in the column denoted by <c>colid</c>
            </summary>
            <param name="colid"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.GetColumnSTDEVP(System.Int32)">
            <summary>
            Will return the computed STDEVP of all the numbers contained in the column denoted by <c>colid</c>
            </summary>
            <param name="colid"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.FuzzyColumnMembership(System.Int32,System.Double,System.Double)">
            <summary>
            Will calculate the fuzzy membership of the values at <c>colid</c> beyond <c>targetval</c> from the direction of <c>outlier</c>
            Values will be between 0 and 1 where beyond <c>targetval</c> is 1 and between <c>outlier</c> and target are some portion
            of 0 to 1. Will use a Liner function between <c>outlier</c> and <c>targetval</c>
            </summary>
            <param name="colid"></param>
            <param name="targetval"></param>
            <param name="outlier"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RollupColumn(System.Int32,System.Int32)">
            <summary>
            Will take the values at the specified <c>row</c> and starting at the specified <c>col</c> to the
            last column in the existing grid and add them up returning the result as a double.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RollupCube(System.Int32,System.Int32)">
            <summary>
            will take the values at the specified <c>row</c> and <c>col</c> continuing to the edge of the grid
            and will add them up returning the result as a double
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.RollupRow(System.Int32,System.Int32)">
            <summary>
            will take the values in a specified <c>col</c> and will take all the valies from the specfied <c>row</c>
            until the last row in the grid and will add them up returning the result as a double
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ImportFromXML(System.String)">
            <summary>
            Will populate the grid from the supplied <c>sFilename</c>
            The call will assume that the caller wants the first set of items from the supplied xml file
            </summary>
            <param name="sFilename"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ImportFromXML(System.String,System.Int32)">
            <summary>
            Will populate the grid from the supplied <c>sFilename</c>
            The call will attempt to get the data from the designated <c>tblnum</c> in the supplied xml file
            </summary>
            <param name="sFilename"></param>
            <param name="tblnum"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PrintTheGrid">
            <summary>
            Will attempt to print the contents of the grid to the default printer in the system
            The grids own properties for Outlining printed cells, Printing page numbers,
            Previewing the output first, Page orientation will be employed in the resulting process
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PrintTheGrid(System.String)">
            <summary>
            Will attempt to print the contents of the grid to the default printer in the system
            The grids own properties for Outlining printed cells, Printing page numbers,
            Previewing the output first, Page orientation will be employed in the resulting process
            The supplied <c>Title</c> will be used to lable the pages of output
            </summary>
            <param name="Title"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PrintTheGrid(System.String,System.Boolean,System.Boolean)">
            <summary>
            Will attempt to print the contents of the grid to the default printer in the system
            The grids own properties for Outlining printed cells, Previewing the output first,
            The supplied <c>Title</c> will be used to lable the pages of output as well as the
            supplied values for <c>NumberPages</c> and <c>Landscapemode</c> will override those setup
            in the grid properties
            </summary>
            <param name="Title"></param>
            <param name="NumberPages"></param>
            <param name="Landscapemode"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.PrintTheGrid(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Will attempt to print the contents of the grid to the default printer in the system
            using supplied values for
            <list type="Bullet">
            <item> <c>Title</c> will use thee supplied strin g to title the resulting output</item>
            <item> <c>MatchColors</c> attempting to match the colors on the grid with printed output</item>
            <item> <c>OutlineCells</c> will draw an outline around each cell of output on the printed page</item>
            <item> <c>NumberPages</c> will number each page as its printed</item>
            <item> <c>PreviewFirst</c> will show the print preview windows forst before sending the results to the printer</item>
            <item> <c>Landscapemode</c> will dictate that the resulting output be in landscape mode</item>
            </list>
            </summary>
            <param name="Title"></param>
            <param name="MatchColors"></param>
            <param name="OutlineCells"></param>
            <param name="NumberPages"></param>
            <param name="PreviewFirst"></param>
            <param name="LandscapeMode"></param>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.SuspendGridPaintOperations">
            <summary>
            Instructs the grid to stop is continuous redrawing
            Can be used to speed up population oiperations that are being performed manually
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TAIGridControl2.TAIGridControl.ResumeGridPaintOperations">
            <summary>
            Will resume the grid automatic redrawing operations
            </summary>
            <remarks></remarks>
        </member>
    </members>
</doc>
